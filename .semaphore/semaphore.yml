version: v1.0
name: Initial Pipeline
agent:
  machine:
    type: f1-standard-2
    os_image: ubuntu2004
auto_cancel:
  running:
    when: branch = 'main'
global_job_config:
  prologue:
    commands:
      - checkout
      - cache restore
      - sem-version ruby 3.2.2
      - sem-service start postgres 13
      - 'curl -fsSL https://packages.redis.io/gpg | sudo gpg --dearmor -o /usr/share/keyrings/redis-archive-keyring.gpg'
      - 'echo "deb [signed-by=/usr/share/keyrings/redis-archive-keyring.gpg] https://packages.redis.io/deb $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/redis.list'
      - sudo apt-get update
      - sudo apt-get -y install redis
      - sudo -u postgres psql -c "CREATE ROLE $PGUSER LOGIN SUPERUSER PASSWORD '$PGPASSWORD';"
      - bundle config --local path vendor/bundle
      - bundle install
      - bundle clean
      - yarn install
      - cache store
  env_vars:
    - name: DISCOURSE_HOSTNAME
      value: www.example.com
    - name: RUBY_GLOBAL_METHOD_CACHE_SIZE
      value: '131072'
    - name: RAILS_ENV
      value: test
    - name: PGUSER
      value: semaphore
    - name: PGPASSWORD
      value: semaphore
    - name: CAPBYARA_DEFAULT_MAX_WAIT_TIME
      value: '4'
    - name: PGDATA
      value: /tmp/test_data/pg
    - name: SPEC_OPTS
      value: '--format documentation'
blocks:
  - name: Tests
    dependencies: []
    task:
      jobs:
        - name: Core Backend
          commands:
            - bundle exec rake db:create db:migrate
            - #bundle exec rake db:migrate
            - bin/turbo_rspec
        - name: Plugins Frontend
          commands:
            - 'bundle exec rake db:create db:migrate'
            - '# bundle exec rake db:migrate'
            - 'QUNIT_PARALLEL=3 bin/rake plugin:qunit[''*'',''1200000'']'
        - name: Core Frontend (Chrome)
          commands:
            - export TESTEM_BROWSER=Chrome && export TESTEM_FIREFOX_PATH=false
            - mkdir /tmp/emberbuild
            - cd ./app/assets/javascripts/discourse
            - yarn ember build --environment=test  -o /tmp/emberbuild
            - yarn ember exam --path /tmp/emberbuild --load-balance --parallel=5  --launch "Chrome" --write-execution-file --random
            - cache restore
        - name: Core Frontend (Firefox ESR)
          commands:
            - 'wget https://ftp.mozilla.org/pub/firefox/releases/102.12.0esr/linux-x86_64/en-GB/firefox-102.12.0esr.tar.bz2'
            - tar xf firefox-102.12.0esr.tar.bz2
            - sudo rm /usr/bin/firefox
            - sudo mv firefox/ /usr/lib/firefox
            - sudo ln -s /usr/lib/firefox/firefox /usr/bin/firefox
            - export MOZ_HEADLESS=1
            - yarn add ember-cli
            - export TESTEM_BROWSER=Firefox && export TESTEM_FIREFOX_PATH=false
            - mkdir /tmp/emberbuild
            - cd ./app/assets/javascripts/discourse
            - yarn ember build --environment=test  -o /tmp/emberbuild
            - yarn ember exam --path /tmp/emberbuild --load-balance --parallel=5  --launch "Firefox" --write-execution-file --random
            - cache restore
        - name: Core Frontend (Firefox Evergreen)
          commands:
            - 'wget https://ftp.mozilla.org/pub/firefox/releases/102.12.0esr/linux-x86_64/en-GB/firefox-102.12.0esr.tar.bz2'
            - tar xf firefox-102.12.0esr.tar.bz2
            - sudo rm /usr/bin/firefox
            - sudo mv firefox/ /usr/lib/firefox
            - sudo ln -s /usr/lib/firefox/firefox /usr/bin/firefox
            - export MOZ_HEADLESS=1
            - yarn add ember-cli
            - export TESTEM_BROWSER=Firefox && export TESTEM_FIREFOX_PATH=/opt/firefox-evergreen/firefox
            - mkdir /tmp/emberbuild
            - cd ./app/assets/javascripts/discourse
            - yarn ember build --environment=test  -o /tmp/emberbuild
            - yarn ember exam --path /tmp/emberbuild --load-balance --parallel=5  --launch "Firefox" --write-execution-file --random
            - cache restore
        - name: Core System
          commands:
            - 'bundle exec rake db:create db:migrate'
            - '# bundle exec rake db:migrate'
            - yarn add ember-cli
            - bin/ember-cli --build
            - 'bin/rails runner "require ''webdrivers''; Webdrivers::Chromedriver.update"'
            - bin/rspec spec/system
        - name: Core Annotations
          commands:
            - 'bundle exec rake db:create db:migrate'
            - '# bundle exec rake db:migrate'
            - 'bin/rake annotate:ensure_all_indexes'
            - bin/annotate --models --model-dir app/models
            - 'if [ ! -z "$(git status --porcelain app/models/)" ];  then echo "Core annotations are not up to date. To resolve, run:"; echo "  bin/rake annotate:clean"; echo " "; echo "Or manually apply the diff printed below:" echo "---------------------------------------------"; git -c color.ui=always diff app/models/; fi;'
  - name: Linting
    dependencies: []
    task:
      jobs:
        - name: ESLint
          commands:
            - bundle exec rubocop --parallel .
            - bundle exec stree check Gemfile $(git ls-files '*.rb') $(git ls-files '*.rake')
            - yarn eslint app/assets/javascripts
            - yarn eslint plugins
            - yarn prettier -v
            - |
              yarn pprettier --list-different \
              "app/assets/stylesheets/**/*.scss" \
              "app/assets/javascripts/**/*.js" \
              "app/assets/javascripts/**/*.hbs" \
              "plugins/**/assets/stylesheets/**/*.scss" \
              "plugins/**/assets/javascripts/**/*.js" \
              "plugins/**/assets/javascripts/**/*.hbs" \
            - yarn ember-template-lint --no-error-on-unmatched-pattern "app/assets/javascripts/**/*.hbs" "plugins/**/assets/javascripts/**/*.hbs"
            - 'bundle exec ruby script/i18n_lint.rb "config/**/locales/{client,server}.en.yml"'
            - 'bundle exec ruby script/i18n_lint.rb "plugins/**/locales/{client,server}.en.yml"'
  - name: Licenses
    dependencies: []
    task:
      jobs:
        - name: Licenses
          commands:
            - gem install licensed
            - licensed cache
            - licensed status
            - yarn install
            - yarn global add licensee
            - yarn global upgrade licensee
            - licensee --errors-only || true
